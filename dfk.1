.\" Automatically generated by Pandoc 2.9.2
.\"
.TH "DFK" "1" "2020/05/03" "Dual Function Keys" "User Manuals"
.hy
.SS NAME
.PP
dfk - dual function keys
.SS SYNOPSIS
.PP
dfk [\f[I]-h\f[R]] -c [\f[I]yaml config path\f[R]]
.SS DESCRIPTION
.PP
Tap for one key, hold for another.
.PP
A plugin for interception tools (https://gitlab.com/interception/linux).
.SS FUNCTIONALITY
.PP
Tap or hold is not enough to be useful.
.SS Tap
.SS Double Tap
.SS Consumption
.SS CONFIGURATION
.PP
There are two parts to be configured: dfk and udevmon, which launches dfk.
.SS dfk
.IP
.nf
\f[C]
TIMING:
    TAP_MILLISEC: 200
    DOUBLE_TAP_MILLISEC: 150

MAPPINGS:
    - KEY: KEY_A
      TAP: KEY_A
      HOLD: KEY_LEFTSHIFT

    - KEY: KEY_S
      TAP: KEY_S
      HOLD: KEY_LEFTCTRL

    - KEY: KEY_D
      TAP: KEY_D
      HOLD: KEY_LEFTALT

    - KEY: KEY_F
      TAP: KEY_F
      HOLD: KEY_LEFTMETA

    - KEY: KEY_J
      TAP: KEY_J
      HOLD: KEY_RIGHTMETA

    - KEY: KEY_K
      TAP: KEY_K
      HOLD: KEY_RIGHTALT

    - KEY: KEY_L
      TAP: KEY_L
      HOLD: KEY_RIGHTCTRL

    - KEY: KEY_SEMICOLON
      TAP: KEY_SEMICOLON
      HOLD: KEY_RIGHTSHIFT
\f[R]
.fi
.SS udevmon
.IP
.nf
\f[C]
- JOB: \[dq]intercept -g $DEVNODE | dfk -c /etc/dfk.home.yaml | uinput -d $DEVNODE\[dq]
  DEVICE:
    NAME: \[dq]Metadot - Das Keyboard D4269\[dq]

- JOB: \[dq]intercept -g $DEVNODE | /home/alex/src/interception/dfk/dfk -c /etc/dfk.home.yaml | uinput -d $DEVNODE\[dq]
  DEVICE:
    NAME: \[dq]OLKB Planck Keyboard\[dq]

- JOB: \[dq]intercept -g $DEVNODE | dfk -c /etc/dfk.ka2.yaml | uinput -d $DEVNODE\[dq]
  DEVICE:
    NAME: \[dq]Kinesis Advantage2 Keyboard\[dq]
    EVENTS:
      EV_KEY: [ KEY_LEFTSHIFT ]

- JOB: \[dq]intercept -g $DEVNODE | dfk -c /etc/dfk.ka2.yaml | uinput -d $DEVNODE\[dq]
  DEVICE:
    NAME: \[dq]ErgoDox EZ ErgoDox EZ Keyboard\[dq]

- JOB: \[dq]intercept -g $DEVNODE | dfk -c /etc/dfk.home.yaml | uinput -d $DEVNODE\[dq]
  DEVICE:
    NAME: \[dq]q.m.k HHKB mod Keyboard\[dq]
\f[R]
.fi
.SS FAQ
.PP
\f[I]I see you are using \[lq]q.m.k HHKB mod Keyboard\[rq] in your udevmon example. It\[cq]s using QMK Firmware (https://qmk.fm/). Why not just use Tap-Hold (https://docs.qmk.fm/#/tap_hold)?\f[R]
.PP
Good catch! That does indeed provide the same functionality as dfk.
Unfortunately there are some drawbacks:
.IP "1." 3
Few keyboards run QMK Firmware.
.IP "2." 3
There are some issues with that functionality, as noted in the doc(https://docs.qmk.fm/#/tap_hold).
.IP "3." 3
It requires a fast processor in the keyboard.
My unscientific testing with an Ergodox (\[ti]800 scans/sec) and HHKB (\[ti]140) revealed that the slower keyboard is mushy and unuseably inaccurate.
.PP
\f[I]Why not use xcape (https://github.com/alols/xcape)?\f[R]
.PP
Xcape only provides simple tap/hold functionality.
It appears difficult (impossible?) to add the remaining functionality using its XTestFakeKeyEvent mechanisms.
.SH AUTHORS
Alexander Courtis.
